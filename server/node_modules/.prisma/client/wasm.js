
/* !!! This is code generated by Prisma. Do not edit directly. !!!
/* eslint-disable */

Object.defineProperty(exports, "__esModule", { value: true });

const {
  Decimal,
  objectEnumValues,
  makeStrictEnum,
  Public,
  getRuntime,
  skip
} = require('@prisma/client/runtime/index-browser.js')


const Prisma = {}

exports.Prisma = Prisma
exports.$Enums = {}

/**
 * Prisma Client JS version: 6.7.0
 * Query Engine version: 3cff47a7f5d65c3ea74883f1d736e41d68ce91ed
 */
Prisma.prismaVersion = {
  client: "6.7.0",
  engine: "3cff47a7f5d65c3ea74883f1d736e41d68ce91ed"
}

Prisma.PrismaClientKnownRequestError = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`PrismaClientKnownRequestError is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)};
Prisma.PrismaClientUnknownRequestError = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`PrismaClientUnknownRequestError is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.PrismaClientRustPanicError = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`PrismaClientRustPanicError is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.PrismaClientInitializationError = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`PrismaClientInitializationError is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.PrismaClientValidationError = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`PrismaClientValidationError is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.Decimal = Decimal

/**
 * Re-export of sql-template-tag
 */
Prisma.sql = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`sqltag is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.empty = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`empty is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.join = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`join is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.raw = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`raw is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.validator = Public.validator

/**
* Extensions
*/
Prisma.getExtensionContext = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`Extensions.getExtensionContext is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.defineExtension = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`Extensions.defineExtension is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}

/**
 * Shorthand utilities for JSON filtering
 */
Prisma.DbNull = objectEnumValues.instances.DbNull
Prisma.JsonNull = objectEnumValues.instances.JsonNull
Prisma.AnyNull = objectEnumValues.instances.AnyNull

Prisma.NullTypes = {
  DbNull: objectEnumValues.classes.DbNull,
  JsonNull: objectEnumValues.classes.JsonNull,
  AnyNull: objectEnumValues.classes.AnyNull
}



/**
 * Enums
 */

exports.Prisma.TransactionIsolationLevel = makeStrictEnum({
  ReadUncommitted: 'ReadUncommitted',
  ReadCommitted: 'ReadCommitted',
  RepeatableRead: 'RepeatableRead',
  Serializable: 'Serializable'
});

exports.Prisma.UserScalarFieldEnum = {
  id: 'id',
  username: 'username',
  password: 'password',
  createdAt: 'createdAt'
};

exports.Prisma.CustomerScalarFieldEnum = {
  id: 'id',
  name: 'name',
  phone: 'phone',
  address: 'address',
  createdAt: 'createdAt'
};

exports.Prisma.MasterItemScalarFieldEnum = {
  id: 'id',
  itemName: 'itemName',
  createdAt: 'createdAt'
};

exports.Prisma.MasterTouchScalarFieldEnum = {
  id: 'id',
  touch: 'touch',
  createdAt: 'createdAt'
};

exports.Prisma.JewelStockScalarFieldEnum = {
  id: 'id',
  jewelName: 'jewelName',
  weight: 'weight',
  stoneWeight: 'stoneWeight',
  finalWeight: 'finalWeight',
  touch: 'touch',
  purityValue: 'purityValue',
  createdAt: 'createdAt'
};

exports.Prisma.TransactionScalarFieldEnum = {
  id: 'id',
  date: 'date',
  type: 'type',
  value: 'value',
  goldRate: 'goldRate',
  purity: 'purity',
  touch: 'touch',
  customerId: 'customerId',
  createdAt: 'createdAt'
};

exports.Prisma.EntryScalarFieldEnum = {
  id: 'id',
  date: 'date',
  type: 'type',
  cashAmount: 'cashAmount',
  goldValue: 'goldValue',
  touch: 'touch',
  purity: 'purity',
  goldRate: 'goldRate',
  createdAt: 'createdAt'
};

exports.Prisma.Customer_orderScalarFieldEnum = {
  id: 'id',
  customer_id: 'customer_id',
  order_group_id: 'order_group_id',
  item_name: 'item_name',
  description: 'description',
  weight: 'weight',
  image: 'image',
  due_date: 'due_date',
  status: 'status',
  worker_name: 'worker_name',
  created_at: 'created_at',
  updatedAt: 'updatedAt'
};

exports.Prisma.Product_multiple_imagesScalarFieldEnum = {
  id: 'id',
  customer_order_id: 'customer_order_id',
  filename: 'filename'
};

exports.Prisma.MasterBullionScalarFieldEnum = {
  id: 'id',
  name: 'name',
  phone: 'phone',
  address: 'address'
};

exports.Prisma.BullionPurchaseScalarFieldEnum = {
  id: 'id',
  bullionId: 'bullionId',
  grams: 'grams',
  touch: 'touch',
  purity: 'purity',
  rate: 'rate',
  amount: 'amount',
  balance: 'balance',
  createdAt: 'createdAt'
};

exports.Prisma.GivenDetailScalarFieldEnum = {
  id: 'id',
  amount: 'amount',
  grams: 'grams',
  touch: 'touch',
  purity: 'purity',
  purchaseId: 'purchaseId'
};

exports.Prisma.GoldsmithScalarFieldEnum = {
  id: 'id',
  name: 'name',
  phone: 'phone',
  address: 'address',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt'
};

exports.Prisma.JobcardScalarFieldEnum = {
  id: 'id',
  goldsmithId: 'goldsmithId',
  description: 'description',
  weight: 'weight',
  touch: 'touch',
  purity: 'purity',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt'
};

exports.Prisma.TotalScalarFieldEnum = {
  id: 'id',
  goldsmithId: 'goldsmithId',
  totalPurity: 'totalPurity',
  openingBalance: 'openingBalance',
  totalBalance: 'totalBalance',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt'
};

exports.Prisma.ItemDeliveryScalarFieldEnum = {
  id: 'id',
  itemName: 'itemName',
  itemWeight: 'itemWeight',
  type: 'type',
  stoneWeight: 'stoneWeight',
  netWeight: 'netWeight',
  wastageType: 'wastageType',
  wastageValue: 'wastageValue',
  finalPurity: 'finalPurity',
  goldsmithId: 'goldsmithId',
  jobcardId: 'jobcardId',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt'
};

exports.Prisma.ReceivedsectionScalarFieldEnum = {
  id: 'id',
  weight: 'weight',
  touch: 'touch',
  purity: 'purity',
  jobcardId: 'jobcardId',
  goldsmithId: 'goldsmithId',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt'
};

exports.Prisma.BalancesScalarFieldEnum = {
  id: 'id',
  goldsmithId: 'goldsmithId',
  totalDeliveries: 'totalDeliveries',
  totalItemWeight: 'totalItemWeight',
  totalNetWeight: 'totalNetWeight',
  totalPurity: 'totalPurity',
  totalReceivedWeight: 'totalReceivedWeight',
  totalReceivedTouch: 'totalReceivedTouch',
  totalReceivedPurity: 'totalReceivedPurity',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt'
};

exports.Prisma.RepairScalarFieldEnum = {
  id: 'id',
  goldsmithId: 'goldsmithId',
  givenWeights: 'givenWeights',
  totalGiven: 'totalGiven',
  itemWeights: 'itemWeights',
  totalItem: 'totalItem',
  stone: 'stone',
  wastageType: 'wastageType',
  touch: 'touch',
  netWeight: 'netWeight',
  createdAt: 'createdAt'
};

exports.Prisma.SortOrder = {
  asc: 'asc',
  desc: 'desc'
};

exports.Prisma.JsonNullValueInput = {
  JsonNull: Prisma.JsonNull
};

exports.Prisma.UserOrderByRelevanceFieldEnum = {
  username: 'username',
  password: 'password'
};

exports.Prisma.NullsOrder = {
  first: 'first',
  last: 'last'
};

exports.Prisma.CustomerOrderByRelevanceFieldEnum = {
  name: 'name',
  phone: 'phone',
  address: 'address'
};

exports.Prisma.MasterItemOrderByRelevanceFieldEnum = {
  itemName: 'itemName'
};

exports.Prisma.JewelStockOrderByRelevanceFieldEnum = {
  jewelName: 'jewelName'
};

exports.Prisma.TransactionOrderByRelevanceFieldEnum = {
  type: 'type'
};

exports.Prisma.EntryOrderByRelevanceFieldEnum = {
  type: 'type'
};

exports.Prisma.customer_orderOrderByRelevanceFieldEnum = {
  item_name: 'item_name',
  description: 'description',
  image: 'image',
  status: 'status',
  worker_name: 'worker_name'
};

exports.Prisma.product_multiple_imagesOrderByRelevanceFieldEnum = {
  filename: 'filename'
};

exports.Prisma.MasterBullionOrderByRelevanceFieldEnum = {
  name: 'name',
  phone: 'phone',
  address: 'address'
};

exports.Prisma.GoldsmithOrderByRelevanceFieldEnum = {
  name: 'name',
  phone: 'phone',
  address: 'address'
};

exports.Prisma.JobcardOrderByRelevanceFieldEnum = {
  description: 'description'
};

exports.Prisma.itemDeliveryOrderByRelevanceFieldEnum = {
  itemName: 'itemName',
  type: 'type'
};

exports.Prisma.JsonNullValueFilter = {
  DbNull: Prisma.DbNull,
  JsonNull: Prisma.JsonNull,
  AnyNull: Prisma.AnyNull
};

exports.Prisma.QueryMode = {
  default: 'default',
  insensitive: 'insensitive'
};

exports.Prisma.RepairOrderByRelevanceFieldEnum = {
  wastageType: 'wastageType'
};
exports.WastageType = exports.$Enums.WastageType = {
  PERCENTAGE: 'PERCENTAGE',
  ADDITION: 'ADDITION',
  TOUCH: 'TOUCH'
};

exports.Prisma.ModelName = {
  User: 'User',
  Customer: 'Customer',
  MasterItem: 'MasterItem',
  MasterTouch: 'MasterTouch',
  JewelStock: 'JewelStock',
  Transaction: 'Transaction',
  Entry: 'Entry',
  customer_order: 'customer_order',
  product_multiple_images: 'product_multiple_images',
  MasterBullion: 'MasterBullion',
  BullionPurchase: 'BullionPurchase',
  GivenDetail: 'GivenDetail',
  Goldsmith: 'Goldsmith',
  Jobcard: 'Jobcard',
  Total: 'Total',
  itemDelivery: 'itemDelivery',
  Receivedsection: 'Receivedsection',
  Balances: 'Balances',
  Repair: 'Repair'
};

/**
 * This is a stub Prisma Client that will error at runtime if called.
 */
class PrismaClient {
  constructor() {
    return new Proxy(this, {
      get(target, prop) {
        let message
        const runtime = getRuntime()
        if (runtime.isEdge) {
          message = `PrismaClient is not configured to run in ${runtime.prettyName}. In order to run Prisma Client on edge runtime, either:
- Use Prisma Accelerate: https://pris.ly/d/accelerate
- Use Driver Adapters: https://pris.ly/d/driver-adapters
`;
        } else {
          message = 'PrismaClient is unable to run in this browser environment, or has been bundled for the browser (running in `' + runtime.prettyName + '`).'
        }

        message += `
If this is unexpected, please open an issue: https://pris.ly/prisma-prisma-bug-report`

        throw new Error(message)
      }
    })
  }
}

exports.PrismaClient = PrismaClient

Object.assign(exports, Prisma)
